@using DeclarativePM.Lib.Models.LogModels
@using DeclarativePM.UI.Utils
<h3>Choose log</h3>
<MatTable Items="EventLogs" class="mat-elevation-z5" AllowSelection="true" SelectionChanged="SelectionLog">
    <MatTableHeader>
        <th>Name</th>
        <th>Traces</th>
        <th>Events</th>
    </MatTableHeader>
    <MatTableRow>
        <td style="@Utilities.GetExpansionBackground(context, _selectedLog)">@context.Name</td>
        <td style="@Utilities.GetExpansionBackground(context, _selectedLog)">@context.Cases().Count.ToString()</td>
        <td style="@Utilities.GetExpansionBackground(context, _selectedLog)">@context.Logs.Count.ToString()</td>
    </MatTableRow>
</MatTable>

@code {

    [Parameter]
    public List<EventLog> EventLogs { get; set; }

    private EventLog _selectedLog;

    [Parameter]
    public EventLog SelectedLog
    {
        get => _selectedLog;
        set
        {
            if (value == _selectedLog)
                return;
            _selectedLog = value;
            SelectedLogChanged.InvokeAsync(value);
        }
    }

    [Parameter]
    public EventCallback<EventLog> SelectedLogChanged { get; set; }

    public void SelectionLog(object log)
    {
        if (log is null)
            return;
        SelectedLog = (EventLog) log;
        StateHasChanged();
    }

}
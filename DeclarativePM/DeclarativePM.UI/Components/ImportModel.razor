@using DeclarativePM.UI.Data
@using System.IO
@using DeclarativePM.Lib.IO.Import
@using DeclarativePM.Lib.Models.DeclareModels
@using DeclarativePM.Lib.Models.LogModels
@implements IDisposable

@inject IMatDialogService MatDialogService
@inject StateContainer StateContainer

<MatFileUpload OnChange="@UploadModel" AllowMultiple="false" Label="Drop files here or Browse"></MatFileUpload>
<ChooseModel DeclareModels=@StateContainer.DeclareModels></ChooseModel>

@code {
    public async Task UploadModel(IMatFileUploadEntry[] files)
    {
        IMatFileUploadEntry file = files.FirstOrDefault();
        if (file is null)
            return;
        if (file.Type != "application/json")
        {
            await MatDialogService.AlertAsync("Model is currently supported only in json");
            return;
        }
        MemoryStream stream = new MemoryStream();
        try
        {
            Importer importer = new Importer();

            await file.WriteToStreamAsync(stream);
            stream.Seek(0, SeekOrigin.Begin);
            DeclareModel model = await importer.LoadModelFromJsonStream(stream);

            StateContainer.DeclareModels.Add(model);
        }
        catch
        {
            await MatDialogService.AlertAsync("Something went wrong during upload");
        }
        finally
        {
            await stream.DisposeAsync();
            await InvokeAsync(StateHasChanged);
        }
    }
    
    public void Dispose()
    {
    }

}
@using DeclarativePM.UI.Enums
@using DeclarativePM.UI.Data
@implements IDisposable

@inject IMatDialogService MatDialogService
@inject StateContainer StateContainer

<MatFileUpload OnChange="@UploadLog" AllowMultiple="false" Label="Drop files here or Browse"></MatFileUpload>

@if (uploadMode)
{
    <span style="white-space: pre-line">
        Filename: @file.Name
        Size: @file.Size.ToString()
        @content
    </span>

    <MatTextField @bind-Value="@LogName" Label="Log name" ></MatTextField><br/>
    @foreach (var head in headersDict)
    {
        var key = head.Key;
        <MatSelectItem value="@headersDict[key]" Items="@value2Items" ValueChanged="@((HeaderType ht) => EnumChanged(ht, key))" HelperText="@key"
                       HelperTextPersistent="true"></MatSelectItem>
    }

    <MatButton OnClick="Import">Import</MatButton>
    <!--<MatButton OnClick="ChooseTokens">Choose Tokens</MatButton>-->
}

<MatTable Items="StateContainer.EventLogs" class="mat-elevation-z5" AllowSelection="true" SelectionChanged="Selection">
    <MatTableHeader>
        <th>Name</th>
        <th>Traces</th>
        <th>Events</th>
        <th>Remove</th>
        </MatTableHeader>
    <MatTableRow>
        <td style="width: fit-content"><span>@context.Name</span></td>
        <td>@context.Cases().Count.ToString()</td>
        <td>@context.Logs.Count.ToString()</td>
        <td style="background: #ff0d00">
            <MatIconButton OnClick="@(() => RemoveLog(context))" Icon="remove"></MatIconButton>
        </td>
    </MatTableRow>
    </MatTable>
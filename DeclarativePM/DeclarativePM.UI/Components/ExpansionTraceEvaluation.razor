@using DeclarativePM.Lib.Models.ConformanceModels
<MatAccordion>
    <MatExpansionPanel Expanded="@true">
        <MatExpansionPanelSummary>
            <MatExpansionPanelHeader>
                <b>Overall trace healthiness</b>
            </MatExpansionPanelHeader>
        </MatExpansionPanelSummary>
        <MatExpansionPanelDetails>
            <span><b>Activation sparsity:</b> @TraceEvaluation.Healthiness.ActivationSparsity</span><br/>
            <span><b>Fulfillment ratio:</b> <p style="color:#13ff00">@TraceEvaluation.Healthiness.FulfillmentRation</p></span><br/>
            <span><b>Conflict ratio:</b> <p style="color:#feb810">@TraceEvaluation.Healthiness.ConflictRation</p></span><br/>
            <span><b>Violation ratio:</b> <p style="color:red">@TraceEvaluation.Healthiness.ViolationRation</p></span><br/>
        </MatExpansionPanelDetails>
    </MatExpansionPanel>

    <MatExpansionPanel>
        <MatExpansionPanelSummary>
            <MatExpansionPanelHeader>
                <b>Most violating template</b>
            </MatExpansionPanelHeader>
            <MatExpansionPanelSubHeader>
                <span>@GetMostViolatingTemplate().Template.TemplateDescription.ReadableName</span>
            </MatExpansionPanelSubHeader>
        </MatExpansionPanelSummary>
        <MatExpansionPanelDetails>
            <span><b>Activation sparsity:</b> @GetMostViolatingTemplate().Healthiness.ActivationSparsity</span><br/>
            <span><b>Fulfillment ratio:</b> <p style="color:#13ff00">@GetMostViolatingTemplate().Healthiness.FulfillmentRation</p></span><br/>
            <span><b>Conflict ratio:</b> <p style="color:#feb810">@GetMostViolatingTemplate().Healthiness.ConflictRation</p></span><br/>
            <span><b>Violation ratio:</b> <p style="color:#ff0000">@GetMostViolatingTemplate().Healthiness.ViolationRation</p></span><br/>
        </MatExpansionPanelDetails>
    </MatExpansionPanel>

    <MatExpansionPanel>
        <MatExpansionPanelSummary>
            <MatExpansionPanelHeader>
                <b>Most conflicting template</b>
            </MatExpansionPanelHeader>
            <MatExpansionPanelSubHeader>
                <span>@GetMostConflictingTemplate().Template.TemplateDescription.ReadableName</span>
            </MatExpansionPanelSubHeader>
        </MatExpansionPanelSummary>
        <MatExpansionPanelDetails>
            <span><b>Activation sparsity:</b> @GetMostConflictingTemplate().Healthiness.ActivationSparsity</span><br/>
            <span><b>Fulfillment ratio:</b> <p style="color:#13ff00">@GetMostConflictingTemplate().Healthiness.FulfillmentRation</p></span><br/>
            <span><b>Conflict ratio:</b> <p style="color:#feb810">@GetMostConflictingTemplate().Healthiness.ConflictRation</p></span><br/>
            <span><b>Violation ratio:</b> <p style="color:red">@GetMostConflictingTemplate().Healthiness.ViolationRation</p></span><br/>
        </MatExpansionPanelDetails>
    </MatExpansionPanel>

    <MatExpansionPanel>
        <MatExpansionPanelSummary>
            <MatExpansionPanelHeader>
                <b>Most violating constraint</b>
            </MatExpansionPanelHeader>
            <MatExpansionPanelSubHeader>
                <span>@GetMostViolatingConstraint().Constraint.ToString()</span>
            </MatExpansionPanelSubHeader>
        </MatExpansionPanelSummary>
        <MatExpansionPanelDetails>
            <span><b>Activation sparsity:</b> @GetMostViolatingConstraint().Healthiness.ActivationSparsity</span><br/>
            <span><b>Fulfillment ratio:</b> <p style="color:#13ff00">@GetMostViolatingConstraint().Healthiness.FulfillmentRation</p></span><br/>
            <span><b>Conflict ratio:</b> <p style="color:#feb810">@GetMostViolatingConstraint().Healthiness.ConflictRation</p></span><br/>
            <span><b>Violation ratio:</b> <p style="color:red">@GetMostViolatingConstraint().Healthiness.ViolationRation</p></span><br/>
        </MatExpansionPanelDetails>
    </MatExpansionPanel>

    <MatExpansionPanel>
        <MatExpansionPanelSummary>
            <MatExpansionPanelHeader>
                <b>Most conflicting constraint</b>
            </MatExpansionPanelHeader>
            <MatExpansionPanelSubHeader>
                <span>@GetMostConflictingConstraint().Constraint.ToString()</span>
            </MatExpansionPanelSubHeader>
        </MatExpansionPanelSummary>
        <MatExpansionPanelDetails>
            <span><b>Activation sparsity:</b> @GetMostConflictingConstraint().Healthiness.ActivationSparsity</span><br/>
            <span><b>Fulfillment ratio:</b> <p style="color:#13ff00">@GetMostConflictingConstraint().Healthiness.FulfillmentRation</p></span><br/>
            <span><b>Conflict ratio:</b> <p style="color:#feb810">@GetMostConflictingConstraint().Healthiness.ConflictRation</p></span><br/>
            <span><b>Violation ratio:</b> <p style="color:red">@GetMostConflictingConstraint().Healthiness.ViolationRation</p></span><br/>
        </MatExpansionPanelDetails>
    </MatExpansionPanel>
</MatAccordion>

@code {

    [Parameter]
    public TraceEvaluation TraceEvaluation { get; set; }

    private TemplateEvaluation _mostViolatingT;

    public TemplateEvaluation GetMostViolatingTemplate()
    {
        _mostViolatingT ??= TraceEvaluation.TemplateEvaluations.Aggregate((t1, t2) =>
            t1.Healthiness.ViolationRation > t2.Healthiness.ViolationRation ? t1 : t2);
        return _mostViolatingT;
    }

    private TemplateEvaluation _mostConflictingT;

    public TemplateEvaluation GetMostConflictingTemplate()
    {
        _mostConflictingT ??= TraceEvaluation.TemplateEvaluations.Aggregate((t1, t2) =>
            t1.Healthiness.ConflictRation > t2.Healthiness.ConflictRation ? t1 : t2);
        return _mostConflictingT;
    }

    private ConstraintEvaluation _mostViolatingC;

    public ConstraintEvaluation GetMostViolatingConstraint()
    {
        _mostViolatingC ??= TraceEvaluation.TemplateEvaluations.SelectMany(t => t.ConstraintEvaluations)
            .Aggregate((t1, t2) =>
                t1.Healthiness.ViolationRation > t2.Healthiness.ViolationRation ? t1 : t2);
        return _mostViolatingC;
    }

    private ConstraintEvaluation _mostConflictingC;

    public ConstraintEvaluation GetMostConflictingConstraint()
    {
        _mostConflictingC ??= TraceEvaluation.TemplateEvaluations.SelectMany(t => t.ConstraintEvaluations)
            .Aggregate((t1, t2) =>
                t1.Healthiness.ConflictRation > t2.Healthiness.ConflictRation ? t1 : t2);
        return _mostConflictingC;
    }

}
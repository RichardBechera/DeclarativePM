@page "/Import"
@using DeclarativePM.UI.Enums
@using DeclarativePM.UI.Data
@implements IDisposable

@inject IMatDialogService MatDialogService
@inject StateContainer StateContainer

<h3>Import</h3>

<MatFileUpload OnChange="@UploadLog" AllowMultiple="false" Label="Drop files here or Browse"></MatFileUpload>

@if (uploadMode)
{
    <span style="white-space: pre-line">
        Filename: @file.Name
        Size: @file.Size.ToString()
        @content
    </span>

    <MatTextField @bind-Value="@LogName" Label="Log name" ></MatTextField><br/>
    @foreach (var head in headersDict)
    {
        var key = head.Key;
        <MatSelectItem value="@headersDict[key]" Items="@value2Items" ValueChanged="@((HeaderType ht) => EnumChanged(ht, key))" HelperText="@key"
                       HelperTextPersistent="true"></MatSelectItem>
    }

    <MatButton OnClick="ImportLog">Import</MatButton>
    <MatButton OnClick="ChooseTokens">Choose Tokens</MatButton>
}

<MatAccordion>
    @foreach (var log in StateContainer.EventLogs)
    {
        <MatExpansionPanel ExpandedChanged="_ => Selection(log)">
            <MatExpansionPanelSummary>
                <MatExpansionPanelHeader>
                    @log.Name
                </MatExpansionPanelHeader>
            </MatExpansionPanelSummary>
            <MatExpansionPanelDetails>
                <ul>
                    @foreach (var head in log.Headers)
                    {
                        <li>@head</li>
                    }
                </ul>
            </MatExpansionPanelDetails>
        </MatExpansionPanel>
    }
</MatAccordion>

@if (selectedLog is not null)
   {
       @selectedLog.Name
       <br/>
       @foreach(var header in selectedLog.Headers)
       {
           @header
           <br/>
       }
   }
   else
   {
       <p>Nothing selected</p>
   }